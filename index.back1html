<script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.12/angular.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/angular-ui-router/0.2.14/angular-ui-router.js"></script>
<div ng-app="app" ng-controller='AppCtrl'>
    <script type="text/ng-template" id="categoryTree">
       <div ng-click="add(category)"> {{ category.title }}  {{ category.title }} </div>
        <ul ng-if="category.categories">
            <li ng-repeat="category in category.categories" ng-include="'categoryTree'">asas
            </li>
        </ul>
    </script>



    <!--<table>-->
        <!--<tr ng-repeat="category in categories" >-->
            <!--<td>sa</td>-->
        <!--</tr>-->
    <!--</table>-->
    <ul>
        <li ng-repeat="category in categories" ng-include="'categoryTree'"></li>
    </ul>
    <button ng-click="add()">add</button>
    <button ng-click="addsub()">addsd</button>
    <button ng-click="addsubsub()">addssubsub</button>
</div>

<script type="application/javascript">
var app = angular.module('app', []);

app.controller('AppCtrl', function ($scope,HttpServices) {

$scope.add = function (cat) {
    var dock = "$scope.categories";
    var lvl = 0;
    var idx = $scope.categories.indexOf(cat);
    if(idx<0){
        console.log(cat.fidx.length);
        lvl = cat.fidx.length;
        var iter = 0;
        while(lvl > iter){
            var pointer = parseInt(cat.fidx[iter]);
            iter++;
            dock += "["+pointer+"]['categories']";
        }

        console.log(dock);
        switch (lvl){
            case 2:
                $scope.categories[cat.fidx[0]]['categories'][cat.fidx[1]]['categories'] = [{
                    fidx:cat.fidx+'0',
                    title: cat.fidx+'0',
                    categories: []
                },{
                    fidx:cat.fidx+'1',
                    title: cat.fidx+'1',
                    categories: []
                }];
            break;
            case 3:

                $scope.categories[cat.fidx[0]]['categories'][cat.fidx[1]]['categories'][cat.fidx[2]]['categories'] = [{
                    fidx:cat.fidx+'0',
                    title: cat.fidx+'0',
                    categories: []
                },{
                    fidx:cat.fidx+'1',
                    title: cat.fidx+'1',
                    categories: []
                }];
            break;
            case 4:

                $scope.categories[cat.fidx[0]]['categories'][cat.fidx[1]]['categories'][cat.fidx[2]]['categories'][cat.fidx[3]]['categories'] = [{
                    fidx:cat.fidx+'0',
                    title: cat.fidx+'0',
                    categories: []
                },{
                    fidx:cat.fidx+'1',
                    title: cat.fidx+'1',
                    categories: []
                }];
            break;
            case 5:

                $scope.categories[cat.fidx[0]]['categories'][cat.fidx[1]]['categories'][cat.fidx[2]]['categories'][cat.fidx[3]]['categories'][cat.fidx[4]]['categories'] = [{
                    fidx:cat.fidx+'0',
                    title: cat.fidx+'0',
                    categories: []
                },{
                    fidx:cat.fidx+'1',
                    title: cat.fidx+'1',
                    categories: []
                }];
            break;
            default:
                  /**/

        }


    }else{
        console.log(cat,idx);

        var childCount = 0;
//        childCount = $scope.categories[idx]['categories'].length();
        $scope.categories[idx]['categories'] = [{
            fidx:cat.fidx+'0',
            title: cat.fidx+'0',
            categories: []
        },{
            fidx:cat.fidx+'1',
            title: cat.fidx+'1',
            categories: []
        }];

    }

};




$scope.categories = [{
                        fidx:'0',
                        title: 'Printers',
                        categories : []
                        },
                        {fidx:'1',
                        title: 'Printers',
                            categories : []
                        }
                        ];

});

app.factory('HttpServices', function ($http, $q) {
    return {
        get : function(r_url,params) {
            return  $http.get(r_url)
                    .then(function(response) {
                        if (typeof response.data === 'object') {
                            return response.data;
                        } else {
                            // invalid response
                            return $q.reject(response.data);
                        }
                    }, function(response) {
                        // something went wrong
                        return $q.reject(response.data);
                    });
        },
        post : function(r_url,params){
            return $http.post(r_url,params);
        }
    };
});

</script>